name: Deploy to Server

on:
  push:
    branches: [ "deploy" ]

env:
  TEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/crazy-bot:test
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/crazy-bot:latest

permissions:
  contents: read

jobs:

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Create .env file
        run: |
          echo "BOT_TOKEN_TEST=${{ secrets.BOT_TOKEN }}" > .env
          echo "ADMIN_ID=${{ secrets.ADMIN_ID }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        shell: bash

      - name: Test
        run: |
          docker run \
          --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          --env-file .env \
          ${{ env.TEST_TAG }} \

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.LATEST_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to server
        run: |
            ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.HOST }} bash <<EOF
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/crazy-bot
            sudo docker stop crazy-bot || true
            sudo docker rm crazy-bot || true
            sudo docker run --name crazy-bot --env-file ~/services/crazy-bot/.env --restart=unless-stopped -d ${{ secrets.DOCKERHUB_USERNAME }}/crazy-bot
            EOF
